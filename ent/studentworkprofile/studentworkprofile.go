// Code generated by entc, DO NOT EDIT.

package studentworkprofile

import (
	"github.com/rs/xid"
)

const (
	// Label holds the string label denoting the studentworkprofile type in the database.
	Label = "student_work_profile"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// EdgeStudentProfile holds the string denoting the student_profile edge name in mutations.
	EdgeStudentProfile = "student_profile"
	// Table holds the table name of the studentworkprofile in the database.
	Table = "student_work_profiles"
	// StudentProfileTable is the table that holds the student_profile relation/edge.
	StudentProfileTable = "student_work_profiles"
	// StudentProfileInverseTable is the table name for the StudentProfile entity.
	// It exists in this package in order to avoid circular dependency with the "studentprofile" package.
	StudentProfileInverseTable = "student_profiles"
	// StudentProfileColumn is the table column denoting the student_profile relation/edge.
	StudentProfileColumn = "student_profile_work_profile"
)

// Columns holds all SQL columns for studentworkprofile fields.
var Columns = []string{
	FieldID,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "student_work_profiles"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"student_profile_work_profile",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() xid.ID
)
