// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CollegeProfilesColumns holds the columns for the "college_profiles" table.
	CollegeProfilesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString},
		{Name: "address", Type: field.TypeString},
		{Name: "type", Type: field.TypeString},
		{Name: "user_college_profile", Type: field.TypeString, Unique: true},
	}
	// CollegeProfilesTable holds the schema information for the "college_profiles" table.
	CollegeProfilesTable = &schema.Table{
		Name:       "college_profiles",
		Columns:    CollegeProfilesColumns,
		PrimaryKey: []*schema.Column{CollegeProfilesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "college_profiles_users_college_profile",
				Columns:    []*schema.Column{CollegeProfilesColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// CompaniesColumns holds the columns for the "companies" table.
	CompaniesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "company_name", Type: field.TypeString},
		{Name: "contact_person_name", Type: field.TypeString},
		{Name: "contact_person_email", Type: field.TypeString},
		{Name: "contact_person_phone", Type: field.TypeString},
		{Name: "user_companies", Type: field.TypeString, Nullable: true},
	}
	// CompaniesTable holds the schema information for the "companies" table.
	CompaniesTable = &schema.Table{
		Name:       "companies",
		Columns:    CompaniesColumns,
		PrimaryKey: []*schema.Column{CompaniesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "companies_users_companies",
				Columns:    []*schema.Column{CompaniesColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// JobPostsColumns holds the columns for the "job_posts" table.
	JobPostsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "position", Type: field.TypeString},
		{Name: "location", Type: field.TypeString},
		{Name: "salary", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "tags", Type: field.TypeJSON},
		{Name: "created_on", Type: field.TypeTime},
		{Name: "company_posts", Type: field.TypeString, Nullable: true},
		{Name: "user_job_posts", Type: field.TypeString, Nullable: true},
	}
	// JobPostsTable holds the schema information for the "job_posts" table.
	JobPostsTable = &schema.Table{
		Name:       "job_posts",
		Columns:    JobPostsColumns,
		PrimaryKey: []*schema.Column{JobPostsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "job_posts_companies_posts",
				Columns:    []*schema.Column{JobPostsColumns[7]},
				RefColumns: []*schema.Column{CompaniesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "job_posts_users_job_posts",
				Columns:    []*schema.Column{JobPostsColumns[8]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// StudentAcademicProfilesColumns holds the columns for the "student_academic_profiles" table.
	StudentAcademicProfilesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "course", Type: field.TypeString},
		{Name: "institute", Type: field.TypeString},
		{Name: "board", Type: field.TypeString},
		{Name: "reg_no", Type: field.TypeString},
		{Name: "department", Type: field.TypeString, Default: "No Department"},
		{Name: "start_date", Type: field.TypeString},
		{Name: "end_date", Type: field.TypeString},
		{Name: "marks", Type: field.TypeString},
		{Name: "student_profile_academic_profile", Type: field.TypeString, Nullable: true},
	}
	// StudentAcademicProfilesTable holds the schema information for the "student_academic_profiles" table.
	StudentAcademicProfilesTable = &schema.Table{
		Name:       "student_academic_profiles",
		Columns:    StudentAcademicProfilesColumns,
		PrimaryKey: []*schema.Column{StudentAcademicProfilesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "student_academic_profiles_student_profiles_academic_profile",
				Columns:    []*schema.Column{StudentAcademicProfilesColumns[9]},
				RefColumns: []*schema.Column{StudentProfilesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// StudentProfilesColumns holds the columns for the "student_profiles" table.
	StudentProfilesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString},
		{Name: "gender", Type: field.TypeString},
		{Name: "caste", Type: field.TypeString},
		{Name: "nationality", Type: field.TypeString},
		{Name: "user_student_profile", Type: field.TypeString, Unique: true},
	}
	// StudentProfilesTable holds the schema information for the "student_profiles" table.
	StudentProfilesTable = &schema.Table{
		Name:       "student_profiles",
		Columns:    StudentProfilesColumns,
		PrimaryKey: []*schema.Column{StudentProfilesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "student_profiles_users_student_profile",
				Columns:    []*schema.Column{StudentProfilesColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// StudentWorkProfilesColumns holds the columns for the "student_work_profiles" table.
	StudentWorkProfilesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "student_profile_work_profile", Type: field.TypeString, Nullable: true},
	}
	// StudentWorkProfilesTable holds the schema information for the "student_work_profiles" table.
	StudentWorkProfilesTable = &schema.Table{
		Name:       "student_work_profiles",
		Columns:    StudentWorkProfilesColumns,
		PrimaryKey: []*schema.Column{StudentWorkProfilesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "student_work_profiles_student_profiles_work_profile",
				Columns:    []*schema.Column{StudentWorkProfilesColumns[1]},
				RefColumns: []*schema.Column{StudentProfilesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "email_verified", Type: field.TypeBool, Default: false},
		{Name: "role", Type: field.TypeString, Default: "student"},
		{Name: "created_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// JobPostCandidatesColumns holds the columns for the "job_post_candidates" table.
	JobPostCandidatesColumns = []*schema.Column{
		{Name: "job_post_id", Type: field.TypeString},
		{Name: "user_id", Type: field.TypeString},
	}
	// JobPostCandidatesTable holds the schema information for the "job_post_candidates" table.
	JobPostCandidatesTable = &schema.Table{
		Name:       "job_post_candidates",
		Columns:    JobPostCandidatesColumns,
		PrimaryKey: []*schema.Column{JobPostCandidatesColumns[0], JobPostCandidatesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "job_post_candidates_job_post_id",
				Columns:    []*schema.Column{JobPostCandidatesColumns[0]},
				RefColumns: []*schema.Column{JobPostsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "job_post_candidates_user_id",
				Columns:    []*schema.Column{JobPostCandidatesColumns[1]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserEnrolledInColumns holds the columns for the "user_enrolled_in" table.
	UserEnrolledInColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeString},
		{Name: "candidate_id", Type: field.TypeString},
	}
	// UserEnrolledInTable holds the schema information for the "user_enrolled_in" table.
	UserEnrolledInTable = &schema.Table{
		Name:       "user_enrolled_in",
		Columns:    UserEnrolledInColumns,
		PrimaryKey: []*schema.Column{UserEnrolledInColumns[0], UserEnrolledInColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_enrolled_in_user_id",
				Columns:    []*schema.Column{UserEnrolledInColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_enrolled_in_candidate_id",
				Columns:    []*schema.Column{UserEnrolledInColumns[1]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CollegeProfilesTable,
		CompaniesTable,
		JobPostsTable,
		StudentAcademicProfilesTable,
		StudentProfilesTable,
		StudentWorkProfilesTable,
		UsersTable,
		JobPostCandidatesTable,
		UserEnrolledInTable,
	}
)

func init() {
	CollegeProfilesTable.ForeignKeys[0].RefTable = UsersTable
	CompaniesTable.ForeignKeys[0].RefTable = UsersTable
	JobPostsTable.ForeignKeys[0].RefTable = CompaniesTable
	JobPostsTable.ForeignKeys[1].RefTable = UsersTable
	StudentAcademicProfilesTable.ForeignKeys[0].RefTable = StudentProfilesTable
	StudentProfilesTable.ForeignKeys[0].RefTable = UsersTable
	StudentWorkProfilesTable.ForeignKeys[0].RefTable = StudentProfilesTable
	JobPostCandidatesTable.ForeignKeys[0].RefTable = JobPostsTable
	JobPostCandidatesTable.ForeignKeys[1].RefTable = UsersTable
	UserEnrolledInTable.ForeignKeys[0].RefTable = UsersTable
	UserEnrolledInTable.ForeignKeys[1].RefTable = UsersTable
}
