// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"
	"windwalker/ent/collegeprofile"
	"windwalker/ent/company"
	"windwalker/ent/jobpost"
	"windwalker/ent/schema"
	"windwalker/ent/studentacademicprofile"
	"windwalker/ent/studentprofile"
	"windwalker/ent/studentworkprofile"
	"windwalker/ent/user"

	"github.com/rs/xid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	collegeprofileFields := schema.CollegeProfile{}.Fields()
	_ = collegeprofileFields
	// collegeprofileDescName is the schema descriptor for name field.
	collegeprofileDescName := collegeprofileFields[1].Descriptor()
	// collegeprofile.NameValidator is a validator for the "name" field. It is called by the builders before save.
	collegeprofile.NameValidator = collegeprofileDescName.Validators[0].(func(string) error)
	// collegeprofileDescPhone is the schema descriptor for phone field.
	collegeprofileDescPhone := collegeprofileFields[2].Descriptor()
	// collegeprofile.PhoneValidator is a validator for the "phone" field. It is called by the builders before save.
	collegeprofile.PhoneValidator = collegeprofileDescPhone.Validators[0].(func(string) error)
	// collegeprofileDescAddress is the schema descriptor for address field.
	collegeprofileDescAddress := collegeprofileFields[3].Descriptor()
	// collegeprofile.AddressValidator is a validator for the "address" field. It is called by the builders before save.
	collegeprofile.AddressValidator = collegeprofileDescAddress.Validators[0].(func(string) error)
	// collegeprofileDescType is the schema descriptor for type field.
	collegeprofileDescType := collegeprofileFields[4].Descriptor()
	// collegeprofile.TypeValidator is a validator for the "type" field. It is called by the builders before save.
	collegeprofile.TypeValidator = collegeprofileDescType.Validators[0].(func(string) error)
	// collegeprofileDescID is the schema descriptor for id field.
	collegeprofileDescID := collegeprofileFields[0].Descriptor()
	// collegeprofile.DefaultID holds the default value on creation for the id field.
	collegeprofile.DefaultID = collegeprofileDescID.Default.(func() string)
	companyMixin := schema.Company{}.Mixin()
	companyMixinFields0 := companyMixin[0].Fields()
	_ = companyMixinFields0
	companyFields := schema.Company{}.Fields()
	_ = companyFields
	// companyDescCompanyName is the schema descriptor for company_name field.
	companyDescCompanyName := companyFields[0].Descriptor()
	// company.CompanyNameValidator is a validator for the "company_name" field. It is called by the builders before save.
	company.CompanyNameValidator = companyDescCompanyName.Validators[0].(func(string) error)
	// companyDescContactPersonName is the schema descriptor for contact_person_name field.
	companyDescContactPersonName := companyFields[1].Descriptor()
	// company.ContactPersonNameValidator is a validator for the "contact_person_name" field. It is called by the builders before save.
	company.ContactPersonNameValidator = companyDescContactPersonName.Validators[0].(func(string) error)
	// companyDescContactPersonEmail is the schema descriptor for contact_person_email field.
	companyDescContactPersonEmail := companyFields[2].Descriptor()
	// company.ContactPersonEmailValidator is a validator for the "contact_person_email" field. It is called by the builders before save.
	company.ContactPersonEmailValidator = companyDescContactPersonEmail.Validators[0].(func(string) error)
	// companyDescContactPersonPhone is the schema descriptor for contact_person_phone field.
	companyDescContactPersonPhone := companyFields[3].Descriptor()
	// company.ContactPersonPhoneValidator is a validator for the "contact_person_phone" field. It is called by the builders before save.
	company.ContactPersonPhoneValidator = companyDescContactPersonPhone.Validators[0].(func(string) error)
	// companyDescID is the schema descriptor for id field.
	companyDescID := companyMixinFields0[0].Descriptor()
	// company.DefaultID holds the default value on creation for the id field.
	company.DefaultID = companyDescID.Default.(func() xid.ID)
	jobpostMixin := schema.JobPost{}.Mixin()
	jobpostMixinFields0 := jobpostMixin[0].Fields()
	_ = jobpostMixinFields0
	jobpostFields := schema.JobPost{}.Fields()
	_ = jobpostFields
	// jobpostDescPosition is the schema descriptor for position field.
	jobpostDescPosition := jobpostFields[0].Descriptor()
	// jobpost.PositionValidator is a validator for the "position" field. It is called by the builders before save.
	jobpost.PositionValidator = jobpostDescPosition.Validators[0].(func(string) error)
	// jobpostDescLocation is the schema descriptor for location field.
	jobpostDescLocation := jobpostFields[1].Descriptor()
	// jobpost.LocationValidator is a validator for the "location" field. It is called by the builders before save.
	jobpost.LocationValidator = jobpostDescLocation.Validators[0].(func(string) error)
	// jobpostDescSalary is the schema descriptor for salary field.
	jobpostDescSalary := jobpostFields[2].Descriptor()
	// jobpost.SalaryValidator is a validator for the "salary" field. It is called by the builders before save.
	jobpost.SalaryValidator = jobpostDescSalary.Validators[0].(func(string) error)
	// jobpostDescDescription is the schema descriptor for description field.
	jobpostDescDescription := jobpostFields[3].Descriptor()
	// jobpost.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	jobpost.DescriptionValidator = jobpostDescDescription.Validators[0].(func(string) error)
	// jobpostDescCreatedOn is the schema descriptor for created_on field.
	jobpostDescCreatedOn := jobpostFields[5].Descriptor()
	// jobpost.DefaultCreatedOn holds the default value on creation for the created_on field.
	jobpost.DefaultCreatedOn = jobpostDescCreatedOn.Default.(func() time.Time)
	// jobpostDescID is the schema descriptor for id field.
	jobpostDescID := jobpostMixinFields0[0].Descriptor()
	// jobpost.DefaultID holds the default value on creation for the id field.
	jobpost.DefaultID = jobpostDescID.Default.(func() xid.ID)
	studentacademicprofileFields := schema.StudentAcademicProfile{}.Fields()
	_ = studentacademicprofileFields
	// studentacademicprofileDescCourse is the schema descriptor for course field.
	studentacademicprofileDescCourse := studentacademicprofileFields[1].Descriptor()
	// studentacademicprofile.CourseValidator is a validator for the "course" field. It is called by the builders before save.
	studentacademicprofile.CourseValidator = studentacademicprofileDescCourse.Validators[0].(func(string) error)
	// studentacademicprofileDescInstitute is the schema descriptor for institute field.
	studentacademicprofileDescInstitute := studentacademicprofileFields[2].Descriptor()
	// studentacademicprofile.InstituteValidator is a validator for the "institute" field. It is called by the builders before save.
	studentacademicprofile.InstituteValidator = studentacademicprofileDescInstitute.Validators[0].(func(string) error)
	// studentacademicprofileDescBoard is the schema descriptor for board field.
	studentacademicprofileDescBoard := studentacademicprofileFields[3].Descriptor()
	// studentacademicprofile.BoardValidator is a validator for the "board" field. It is called by the builders before save.
	studentacademicprofile.BoardValidator = studentacademicprofileDescBoard.Validators[0].(func(string) error)
	// studentacademicprofileDescRegNo is the schema descriptor for reg_no field.
	studentacademicprofileDescRegNo := studentacademicprofileFields[4].Descriptor()
	// studentacademicprofile.RegNoValidator is a validator for the "reg_no" field. It is called by the builders before save.
	studentacademicprofile.RegNoValidator = studentacademicprofileDescRegNo.Validators[0].(func(string) error)
	// studentacademicprofileDescDepartment is the schema descriptor for department field.
	studentacademicprofileDescDepartment := studentacademicprofileFields[5].Descriptor()
	// studentacademicprofile.DefaultDepartment holds the default value on creation for the department field.
	studentacademicprofile.DefaultDepartment = studentacademicprofileDescDepartment.Default.(string)
	// studentacademicprofileDescStartDate is the schema descriptor for start_date field.
	studentacademicprofileDescStartDate := studentacademicprofileFields[6].Descriptor()
	// studentacademicprofile.StartDateValidator is a validator for the "start_date" field. It is called by the builders before save.
	studentacademicprofile.StartDateValidator = studentacademicprofileDescStartDate.Validators[0].(func(string) error)
	// studentacademicprofileDescEndDate is the schema descriptor for end_date field.
	studentacademicprofileDescEndDate := studentacademicprofileFields[7].Descriptor()
	// studentacademicprofile.EndDateValidator is a validator for the "end_date" field. It is called by the builders before save.
	studentacademicprofile.EndDateValidator = studentacademicprofileDescEndDate.Validators[0].(func(string) error)
	// studentacademicprofileDescMarks is the schema descriptor for marks field.
	studentacademicprofileDescMarks := studentacademicprofileFields[8].Descriptor()
	// studentacademicprofile.MarksValidator is a validator for the "marks" field. It is called by the builders before save.
	studentacademicprofile.MarksValidator = studentacademicprofileDescMarks.Validators[0].(func(string) error)
	// studentacademicprofileDescID is the schema descriptor for id field.
	studentacademicprofileDescID := studentacademicprofileFields[0].Descriptor()
	// studentacademicprofile.DefaultID holds the default value on creation for the id field.
	studentacademicprofile.DefaultID = studentacademicprofileDescID.Default.(func() string)
	studentprofileMixin := schema.StudentProfile{}.Mixin()
	studentprofileMixinFields0 := studentprofileMixin[0].Fields()
	_ = studentprofileMixinFields0
	studentprofileFields := schema.StudentProfile{}.Fields()
	_ = studentprofileFields
	// studentprofileDescName is the schema descriptor for name field.
	studentprofileDescName := studentprofileFields[0].Descriptor()
	// studentprofile.NameValidator is a validator for the "name" field. It is called by the builders before save.
	studentprofile.NameValidator = studentprofileDescName.Validators[0].(func(string) error)
	// studentprofileDescPhone is the schema descriptor for phone field.
	studentprofileDescPhone := studentprofileFields[1].Descriptor()
	// studentprofile.PhoneValidator is a validator for the "phone" field. It is called by the builders before save.
	studentprofile.PhoneValidator = studentprofileDescPhone.Validators[0].(func(string) error)
	// studentprofileDescGender is the schema descriptor for gender field.
	studentprofileDescGender := studentprofileFields[2].Descriptor()
	// studentprofile.GenderValidator is a validator for the "gender" field. It is called by the builders before save.
	studentprofile.GenderValidator = studentprofileDescGender.Validators[0].(func(string) error)
	// studentprofileDescCaste is the schema descriptor for caste field.
	studentprofileDescCaste := studentprofileFields[3].Descriptor()
	// studentprofile.CasteValidator is a validator for the "caste" field. It is called by the builders before save.
	studentprofile.CasteValidator = studentprofileDescCaste.Validators[0].(func(string) error)
	// studentprofileDescNationality is the schema descriptor for nationality field.
	studentprofileDescNationality := studentprofileFields[4].Descriptor()
	// studentprofile.NationalityValidator is a validator for the "nationality" field. It is called by the builders before save.
	studentprofile.NationalityValidator = studentprofileDescNationality.Validators[0].(func(string) error)
	// studentprofileDescID is the schema descriptor for id field.
	studentprofileDescID := studentprofileMixinFields0[0].Descriptor()
	// studentprofile.DefaultID holds the default value on creation for the id field.
	studentprofile.DefaultID = studentprofileDescID.Default.(func() xid.ID)
	studentworkprofileMixin := schema.StudentWorkProfile{}.Mixin()
	studentworkprofileMixinFields0 := studentworkprofileMixin[0].Fields()
	_ = studentworkprofileMixinFields0
	studentworkprofileFields := schema.StudentWorkProfile{}.Fields()
	_ = studentworkprofileFields
	// studentworkprofileDescID is the schema descriptor for id field.
	studentworkprofileDescID := studentworkprofileMixinFields0[0].Descriptor()
	// studentworkprofile.DefaultID holds the default value on creation for the id field.
	studentworkprofile.DefaultID = studentworkprofileDescID.Default.(func() xid.ID)
	userMixin := schema.User{}.Mixin()
	userMixinFields0 := userMixin[0].Fields()
	_ = userMixinFields0
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[0].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[1].Descriptor()
	// user.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func(string) error)
	// userDescEmailVerified is the schema descriptor for email_verified field.
	userDescEmailVerified := userFields[2].Descriptor()
	// user.DefaultEmailVerified holds the default value on creation for the email_verified field.
	user.DefaultEmailVerified = userDescEmailVerified.Default.(bool)
	// userDescRole is the schema descriptor for role field.
	userDescRole := userFields[3].Descriptor()
	// user.DefaultRole holds the default value on creation for the role field.
	user.DefaultRole = userDescRole.Default.(string)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[4].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescID is the schema descriptor for id field.
	userDescID := userMixinFields0[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() xid.ID)
}
